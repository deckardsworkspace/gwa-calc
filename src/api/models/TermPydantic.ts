/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoursePydantic } from './CoursePydantic';
import {
  CoursePydanticFromJSON,
  CoursePydanticFromJSONTyped,
  CoursePydanticToJSON,
} from './CoursePydantic';

/**
 *
 * @export
 * @interface TermPydantic
 */
export interface TermPydantic {
  /**
   *
   * @type {string}
   * @memberof TermPydantic
   */
  id: string;
  /**
   *
   * @type {Date}
   * @memberof TermPydantic
   */
  createdAt: Date;
  /**
   *
   * @type {Date}
   * @memberof TermPydantic
   */
  updatedAt: Date;
  /**
   *
   * @type {string}
   * @memberof TermPydantic
   */
  creatorId?: string;
  /**
   *
   * @type {string}
   * @memberof TermPydantic
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof TermPydantic
   */
  description?: string;
  /**
   *
   * @type {Array<CoursePydantic>}
   * @memberof TermPydantic
   */
  courses: Array<CoursePydantic>;
  /**
   *
   * @type {boolean}
   * @memberof TermPydantic
   */
  isPublic: boolean;
}

/**
 * Check if a given object implements the TermPydantic interface.
 */
export function instanceOfTermPydantic(value: object): boolean {
  if (!('id' in value)) return false;
  if (!('createdAt' in value)) return false;
  if (!('updatedAt' in value)) return false;
  if (!('name' in value)) return false;
  if (!('courses' in value)) return false;
  if (!('isPublic' in value)) return false;
  return true;
}

export function TermPydanticFromJSON(json: any): TermPydantic {
  return TermPydanticFromJSONTyped(json, false);
}

export function TermPydanticFromJSONTyped(json: any, ignoreDiscriminator: boolean): TermPydantic {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'],
    createdAt: new Date(json['created_at']),
    updatedAt: new Date(json['updated_at']),
    creatorId: json['creator_id'] == null ? undefined : json['creator_id'],
    name: json['name'],
    description: json['description'] == null ? undefined : json['description'],
    courses: (json['courses'] as Array<any>).map(CoursePydanticFromJSON),
    isPublic: json['is_public'],
  };
}

export function TermPydanticToJSON(value?: TermPydantic | null): any {
  if (value == null) {
    return value;
  }
  return {
    id: value['id'],
    created_at: value['createdAt'].toISOString(),
    updated_at: value['updatedAt'].toISOString(),
    creator_id: value['creatorId'],
    name: value['name'],
    description: value['description'],
    courses: (value['courses'] as Array<any>).map(CoursePydanticToJSON),
    is_public: value['isPublic'],
  };
}
